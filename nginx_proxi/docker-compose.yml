version: "2.1"

services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - 80:80
      - 443:443
    environment:
      - DEFAULT_HOST=evin-records.dev
    volumes:
      - ${SERVER_PATH}/nginx/conf.d:/etc/nginx/conf.d
      - ${SERVER_PATH}/nginx/vhost.d:/etc/nginx/vhost.d:rw
      - ${ROOT_PATH}/html:/usr/share/nginx/html
      - ${SERVER_PATH}/nginx/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: unless-stopped
    networks:
      - default


  nginx-gen:
    image: jwilder/docker-gen
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen: "true"
    command: -notify-sighup ${NGINX_WEB} -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    # entrypoint: /usr/local/bin/docker-gen -notify-sighup ${NGINX_WEB} -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: ${DOCKER_GEN}
    restart: unless-stopped
    volumes_from: [nginx-proxy]
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # - "./volumes/proxtes/nginx.tmply/templates:/etc/docker-gen/templates:ro"
      # - ./.server/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:rw
      - /etc/docker-gen/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:rw
      # - ./.server/templa:/etc/docker-gen/templates/:rw
    networks:
      - default

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: ${LETS_ENCRYPT}
    restart: unless-stopped
    depends_on:
      - nginx-proxy
      - nginx-gen
    restart: unless-stopped
    volumes_from: [nginx-proxy]
    volumes:
      - ${SERVER_PATH}/nginx/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: ${DOCKER_GEN}
      NGINX_PROXY_CONTAINER: ${NGINX_WEB}
    networks:
      - default

networks:
  default:
    external:
      name: ${NETWORK}
